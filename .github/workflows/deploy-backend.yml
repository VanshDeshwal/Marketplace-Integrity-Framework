name: Deploy Backend API to Azure (Docker)

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'dataset/**'
      - '.github/workflows/deploy-backend.yml'
  repository_dispatch:
    types: [deploy-backend]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: marketplace-integrity-api
  AZURE_RESOURCE_GROUP: marketplace-integrity-rg
  REGISTRY: ghcr.io
  IMAGE_NAME: vanshdeshwal/marketplace-integrity-framework-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile.prod
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.revision=${{ github.sha }}

    - name: Deploy to Azure Web App (Container)
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    # Fallback deployment using Azure CLI with publish profile login.
    # This explicitly sets the Linux container image and applies critical app settings.
    - name: Azure Login (Publish Profile)
      if: failure()
      uses: azure/login@v1
      with:
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

    - name: Configure container image via Azure CLI (fallback)
      if: failure()
      run: |
        set -e
        echo "Setting linuxFxVersion to DOCKER|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        az webapp config set \
          --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
          --name "${{ env.AZURE_WEBAPP_NAME }}" \
          --linux-fx-version "DOCKER|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

        echo "Applying essential app settings (port, healthcheck, startup time, disable Oryx)"
        az webapp config appsettings set \
          --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
          --name "${{ env.AZURE_WEBAPP_NAME }}" \
          --settings \
            WEBSITES_PORT=8000 \
            WEBSITE_HEALTHCHECK_PATH=/health \
            WEBSITES_CONTAINER_START_TIME_LIMIT=900 \
            SCM_DO_BUILD_DURING_DEPLOYMENT=false \
            ENABLE_ORYX_BUILD=false

        echo "Restarting web app"
        az webapp restart \
          --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
          --name "${{ env.AZURE_WEBAPP_NAME }}"

    - name: Verify Azure config (fallback)
      if: always()
      run: |
        echo "Current linuxFxVersion and healthcheck path:"
        az webapp config show \
          --resource-group "${{ env.AZURE_RESOURCE_GROUP }}" \
          --name "${{ env.AZURE_WEBAPP_NAME }}" \
          --query "{linuxFxVersion:linuxFxVersion, healthCheckPath:healthCheckPath, alwaysOn:alwaysOn}" -o tsv || true

    - name: Health Check
      run: |
        echo "Waiting for container deployment to be ready..."
        sleep 90
        curl -f https://api.marketplace.vanshdeshwal.dev/health || echo "Health check failed - container may still be starting"

    - name: Deployment Summary
      run: |
        echo "üöÄ Backend Docker deployment completed!"
        echo "üê≥ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        echo "üîó API URL: https://api.marketplace.vanshdeshwal.dev"
        echo "üåê Frontend URL: https://marketplace.vanshdeshwal.dev"
        echo "üíæ Storage: Azure Blob Storage"
        echo "‚úÖ Fixed lowercase repository name issue"

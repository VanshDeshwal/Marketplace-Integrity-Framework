name: Deploy Backend API to Azure (Docker)

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'dataset/**'
      - '.github/workflows/deploy-backend.yml'
  repository_dispatch:
    types: [deploy-backend]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: marketplace-integrity-api
  AZURE_RESOURCE_GROUP: marketplace-integrity-rg
  REGISTRY: ghcr.io
  IMAGE_NAME: vanshdeshwal/marketplace-integrity-framework-backend
  IMAGE_SHA_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile.prod
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_SHA_TAG }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.html_url }}
          org.opencontainers.image.revision=${{ github.sha }}

    - name: Login to Azure (publish profile)
      uses: azure/login@v2
      with:
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

    - name: Update Web App to use new SHA image tag
      uses: azure/cli@v2
      with:
        inlineScript: |
          set -euo pipefail
          echo "Setting container image to ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_SHA_TAG }}"
          az webapp config container set \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --docker-custom-image-name "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_SHA_TAG }}" \
            --docker-registry-server-url https://${{ env.REGISTRY }} || true

    - name: Restart Web App
      uses: azure/cli@v2
      with:
        inlineScript: |
          az webapp restart --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }}

    # Kudu restart no longer necessary; we use az webapp restart above

    - name: Health Check
      shell: bash
      run: |
        echo "Waiting for container deployment to be ready..."
        ATTEMPTS=20
        SLEEP=15
        URLS=(
          "https://api.marketplace.vanshdeshwal.dev/health"
          "https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health"
        )
        for i in $(seq 1 $ATTEMPTS); do
          for U in "${URLS[@]}"; do
            echo "Attempt $i/$ATTEMPTS: GET $U"
            if curl -sf "$U" > /dev/null; then
              echo "✅ Health check passed at $U"
              exit 0
            fi
          done
          sleep $SLEEP
        done
        echo "❌ Health check failed after $((ATTEMPTS*SLEEP))s"
        exit 1

    - name: Collect diagnostics (HTTP headers)
      shell: bash
      if: always()
      run: |
        set -euo pipefail
        mkdir -p diag
        for U in \
          "https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health" \
          "https://api.marketplace.vanshdeshwal.dev/health"; do
          echo "==== $U ====" >> diag/headers.txt
          (curl -sSI "$U" || true) >> diag/headers.txt
          echo "" >> diag/headers.txt
        done

    - name: Upload diagnostics artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: backend-deploy-diagnostics-${{ github.sha }}
        path: diag

    - name: Deployment Summary
      shell: bash
      run: |
        echo "🚀 Backend Docker deployment completed (based on health check)."
        echo "🐳 Image deployed: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_SHA_TAG }}"
        echo "📦 Latest tag also pushed: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        echo "🔗 Primary API URL: https://api.marketplace.vanshdeshwal.dev/health"
        echo "🔗 Fallback API URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health"
        echo "ℹ️ Deployment performed via image push + Azure CLI (no webapps-deploy step)."
